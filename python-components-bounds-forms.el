;;; python-components-bounds-forms.el --- bounds forms

;; Copyright (C) 2011-2014  Andreas Roehler
;; Author: Andreas Roehler <andreas.roehler@online.de>
;; Keywords: languages, convenience

;; This program is free software; you can redistribute it and/or modify
;; it under the terms of the GNU General Public License as published by
;; the Free Software Foundation, either version 3 of the License, or
;; (at your option) any later version.

;; This program is distributed in the hope that it will be useful,
;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;; GNU General Public License for more details.

;; You should have received a copy of the GNU General Public License
;; along with this program.  If not, see <http://www.gnu.org/licenses/>.

;;; Commentary:

;; This file is generated by function from python-mode-utils.el - see in
;; directory devel. Edits here might not be persistent.

;;; Code:

(defun py--bounds-of-statement (&optional position)
  "Returns bounds of statement at point.

With optional POSITION, a number, report bounds of statement at POSITION.
Returns a list, whose car is beg, cdr - end."
  (save-excursion
    (save-restriction
      (widen)
      (when position (goto-char position))
      (let ((beg (py--beginning-of-statement-position))
            (end (py--end-of-statement-position)))
        (if (and beg end)
            (when (interactive-p) (message "%s" (list beg end)))
          (list beg end))))))

(defun py--bounds-of-block (&optional position)
  "Returns bounds of block at point.

With optional POSITION, a number, report bounds of block at POSITION.
Returns a list, whose car is beg, cdr - end."
  (save-excursion
    (save-restriction
      (widen)
      (when position (goto-char position))
      (let ((beg (py--beginning-of-block-position))
            (end (py--end-of-block-position)))
        (if (and beg end)
            (when (interactive-p) (message "%s" (list beg end)))
          (list beg end))))))

(defun py--bounds-of-clause (&optional position)
  "Returns bounds of clause at point.

With optional POSITION, a number, report bounds of clause at POSITION.
Returns a list, whose car is beg, cdr - end."
  (save-excursion
    (save-restriction
      (widen)
      (when position (goto-char position))
      (let ((beg (py--beginning-of-clause-position))
            (end (py--end-of-clause-position)))
        (if (and beg end)
            (when (interactive-p) (message "%s" (list beg end)))
          (list beg end))))))

(defun py--bounds-of-block-or-clause (&optional position)
  "Returns bounds of block-or-clause at point.

With optional POSITION, a number, report bounds of block-or-clause at POSITION.
Returns a list, whose car is beg, cdr - end."
  (save-excursion
    (save-restriction
      (widen)
      (when position (goto-char position))
      (let ((beg (py--beginning-of-block-or-clause-position))
            (end (py--end-of-block-or-clause-position)))
        (if (and beg end)
            (when (interactive-p) (message "%s" (list beg end)))
          (list beg end))))))

(defun py--bounds-of-def (&optional position)
  "Returns bounds of def at point.

With optional POSITION, a number, report bounds of def at POSITION.
Returns a list, whose car is beg, cdr - end."
  (save-excursion
    (save-restriction
      (widen)
      (when position (goto-char position))
      (let ((beg (py--beginning-of-def-position))
            (end (py--end-of-def-position)))
        (if (and beg end)
            (when (interactive-p) (message "%s" (list beg end)))
          (list beg end))))))

(defun py--bounds-of-class (&optional position)
  "Returns bounds of class at point.

With optional POSITION, a number, report bounds of class at POSITION.
Returns a list, whose car is beg, cdr - end."
  (save-excursion
    (save-restriction
      (widen)
      (when position (goto-char position))
      (let ((beg (py--beginning-of-class-position))
            (end (py--end-of-class-position)))
        (if (and beg end)
            (when (interactive-p) (message "%s" (list beg end)))
          (list beg end))))))

(defun py--bounds-of-def-or-class (&optional position)
  "Returns bounds of def-or-class at point.

With optional POSITION, a number, report bounds of def-or-class at POSITION.
Returns a list, whose car is beg, cdr - end."
  (save-excursion
    (save-restriction
      (widen)
      (when position (goto-char position))
      (let ((beg (py--beginning-of-def-or-class-position))
            (end (py--end-of-def-or-class-position)))
        (if (and beg end)
            (when (interactive-p) (message "%s" (list beg end)))
          (list beg end))))))

(defun py--bounds-of-buffer (&optional position)
  "Returns bounds of buffer at point.

With optional POSITION, a number, report bounds of buffer at POSITION.
Returns a list, whose car is beg, cdr - end."
  (save-excursion
    (save-restriction
      (widen)
      (when position (goto-char position))
      (let ((beg (py--beginning-of-buffer-position))
            (end (py--end-of-buffer-position)))
        (if (and beg end)
            (when (interactive-p) (message "%s" (list beg end)))
          (list beg end))))))

(defun py--bounds-of-expression (&optional position)
  "Returns bounds of expression at point.

With optional POSITION, a number, report bounds of expression at POSITION.
Returns a list, whose car is beg, cdr - end."
  (save-excursion
    (save-restriction
      (widen)
      (when position (goto-char position))
      (let ((beg (py--beginning-of-expression-position))
            (end (py--end-of-expression-position)))
        (if (and beg end)
            (when (interactive-p) (message "%s" (list beg end)))
          (list beg end))))))

(defun py--bounds-of-partial-expression (&optional position)
  "Returns bounds of partial-expression at point.

With optional POSITION, a number, report bounds of partial-expression at POSITION.
Returns a list, whose car is beg, cdr - end."
  (save-excursion
    (save-restriction
      (widen)
      (when position (goto-char position))
      (let ((beg (py--beginning-of-partial-expression-position))
            (end (py--end-of-partial-expression-position)))
        (if (and beg end)
            (when (interactive-p) (message "%s" (list beg end)))
          (list beg end))))))

(defun py--bounds-of-minor-block (&optional position)
  "Returns bounds of minor-block at point.

With optional POSITION, a number, report bounds of minor-block at POSITION.
Returns a list, whose car is beg, cdr - end."
  (save-excursion
    (save-restriction
      (widen)
      (when position (goto-char position))
      (let ((beg (py--beginning-of-minor-block-position))
            (end (py--end-of-minor-block-position)))
        (if (and beg end)
            (when (interactive-p) (message "%s" (list beg end)))
          (list beg end))))))

(defun py--bounds-of-if-block (&optional position)
  "Returns bounds of if-block at point.

With optional POSITION, a number, report bounds of if-block at POSITION.
Returns a list, whose car is beg, cdr - end."
  (save-excursion
    (save-restriction
      (widen)
      (when position (goto-char position))
      (let ((beg (py--beginning-of-if-block-position))
            (end (py--end-of-if-block-position)))
        (if (and beg end)
            (when (interactive-p) (message "%s" (list beg end)))
          (list beg end))))))

(defun py--bounds-of-try-block (&optional position)
  "Returns bounds of try-block at point.

With optional POSITION, a number, report bounds of try-block at POSITION.
Returns a list, whose car is beg, cdr - end."
  (save-excursion
    (save-restriction
      (widen)
      (when position (goto-char position))
      (let ((beg (py--beginning-of-try-block-position))
            (end (py--end-of-try-block-position)))
        (if (and beg end)
            (when (interactive-p) (message "%s" (list beg end)))
          (list beg end))))))

(defun py--bounds-of-except-block (&optional position)
  "Returns bounds of except-block at point.

With optional POSITION, a number, report bounds of except-block at POSITION.
Returns a list, whose car is beg, cdr - end."
  (save-excursion
    (save-restriction
      (widen)
      (when position (goto-char position))
      (let ((beg (py--beginning-of-except-block-position))
            (end (py--end-of-except-block-position)))
        (if (and beg end)
            (when (interactive-p) (message "%s" (list beg end)))
          (list beg end))))))

(defun py--bounds-of-top-level (&optional position)
  "Returns bounds of top-level at point.

With optional POSITION, a number, report bounds of top-level at POSITION.
Returns a list, whose car is beg, cdr - end."
  (save-excursion
    (save-restriction
      (widen)
      (when position (goto-char position))
      (let ((beg (py--beginning-of-top-level-position))
            (end (py--end-of-top-level-position)))
        (if (and beg end)
            (when (interactive-p) (message "%s" (list beg end)))
          (list beg end))))))

(defun py--bounds-of-statement-bol (&optional position)
  "Returns bounds of statement at beginning-of-line.

With optional POSITION, a number, report bounds of statement at POSITION.
Returns a list, whose car is beg, cdr - end."
  (save-excursion
    (save-restriction
      (widen)
      (when position (goto-char position))
      (let ((beg (py--beginning-of-statement-position-bol))
            (end (py--end-of-statement-position-bol)))
        (if (and beg end)
            (when (interactive-p) (message "%s" (list beg end)))
          (list beg end))))))

(defun py--bounds-of-block-bol (&optional position)
  "Returns bounds of block at beginning-of-line.

With optional POSITION, a number, report bounds of block at POSITION.
Returns a list, whose car is beg, cdr - end."
  (save-excursion
    (save-restriction
      (widen)
      (when position (goto-char position))
      (let ((beg (py--beginning-of-block-position-bol))
            (end (py--end-of-block-position-bol)))
        (if (and beg end)
            (when (interactive-p) (message "%s" (list beg end)))
          (list beg end))))))

(defun py--bounds-of-clause-bol (&optional position)
  "Returns bounds of clause at beginning-of-line.

With optional POSITION, a number, report bounds of clause at POSITION.
Returns a list, whose car is beg, cdr - end."
  (save-excursion
    (save-restriction
      (widen)
      (when position (goto-char position))
      (let ((beg (py--beginning-of-clause-position-bol))
            (end (py--end-of-clause-position-bol)))
        (if (and beg end)
            (when (interactive-p) (message "%s" (list beg end)))
          (list beg end))))))

(defun py--bounds-of-block-or-clause-bol (&optional position)
  "Returns bounds of block-or-clause at beginning-of-line.

With optional POSITION, a number, report bounds of block-or-clause at POSITION.
Returns a list, whose car is beg, cdr - end."
  (save-excursion
    (save-restriction
      (widen)
      (when position (goto-char position))
      (let ((beg (py--beginning-of-block-or-clause-position-bol))
            (end (py--end-of-block-or-clause-position-bol)))
        (if (and beg end)
            (when (interactive-p) (message "%s" (list beg end)))
          (list beg end))))))

(defun py--bounds-of-def-bol (&optional position)
  "Returns bounds of def at beginning-of-line.

With optional POSITION, a number, report bounds of def at POSITION.
Returns a list, whose car is beg, cdr - end."
  (save-excursion
    (save-restriction
      (widen)
      (when position (goto-char position))
      (let ((beg (py--beginning-of-def-position-bol))
            (end (py--end-of-def-position-bol)))
        (if (and beg end)
            (when (interactive-p) (message "%s" (list beg end)))
          (list beg end))))))

(defun py--bounds-of-class-bol (&optional position)
  "Returns bounds of class at beginning-of-line.

With optional POSITION, a number, report bounds of class at POSITION.
Returns a list, whose car is beg, cdr - end."
  (save-excursion
    (save-restriction
      (widen)
      (when position (goto-char position))
      (let ((beg (py--beginning-of-class-position-bol))
            (end (py--end-of-class-position-bol)))
        (if (and beg end)
            (when (interactive-p) (message "%s" (list beg end)))
          (list beg end))))))

(defun py--bounds-of-minor-block-bol (&optional position)
  "Returns bounds of minor-block at beginning-of-line.

With optional POSITION, a number, report bounds of minor-block at POSITION.
Returns a list, whose car is beg, cdr - end."
  (save-excursion
    (save-restriction
      (widen)
      (when position (goto-char position))
      (let ((beg (py--beginning-of-minor-block-position-bol))
            (end (py--end-of-minor-block-position-bol)))
        (if (and beg end)
            (when (interactive-p) (message "%s" (list beg end)))
          (list beg end))))))

(defun py--bounds-of-if-block-bol (&optional position)
  "Returns bounds of if-block at beginning-of-line.

With optional POSITION, a number, report bounds of if-block at POSITION.
Returns a list, whose car is beg, cdr - end."
  (save-excursion
    (save-restriction
      (widen)
      (when position (goto-char position))
      (let ((beg (py--beginning-of-if-block-position-bol))
            (end (py--end-of-if-block-position-bol)))
        (if (and beg end)
            (when (interactive-p) (message "%s" (list beg end)))
          (list beg end))))))

(defun py--bounds-of-try-block-bol (&optional position)
  "Returns bounds of try-block at beginning-of-line.

With optional POSITION, a number, report bounds of try-block at POSITION.
Returns a list, whose car is beg, cdr - end."
  (save-excursion
    (save-restriction
      (widen)
      (when position (goto-char position))
      (let ((beg (py--beginning-of-try-block-position-bol))
            (end (py--end-of-try-block-position-bol)))
        (if (and beg end)
            (when (interactive-p) (message "%s" (list beg end)))
          (list beg end))))))


(provide 'python-components-bounds-forms)
;; python-components-bounds-forms.el ends here
