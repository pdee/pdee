;;; python-components-up.el -- Searching upwards in buffer -*- lexical-binding: t; -*- 


;; URL: https://gitlab.com/python-mode-devs
;; Keywords: languages

;; This program is free software; you can redistribute it and/or modify
;; it under the terms of the GNU General Public License as published by
;; the Free Software Foundation, either version 3 of the License, or
;; (at your option) any later version.

;; This program is distributed in the hope that it will be useful,
;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;; GNU General Public License for more details.

;; You should have received a copy of the GNU General Public License
;; along with this program.  If not, see <http://www.gnu.org/licenses/>.

;;; Commentary:

;; This file is generated by function from python-mode-utils.el - see in
;; directory devel. Edits here might not be persistent.

;;; Code:


(defun py-up-block ()
  "Go to the beginning of next block upwards.

Return position if block found, nil otherwise."
  (interactive)
  (py-up-base (quote py-block-re)))

(defun py-up-class ()
  "Go to the beginning of next class upwards.

Return position if class found, nil otherwise."
  (interactive)
  (py-up-base (quote py-class-re)))

(defun py-up-clause ()
  "Go to the beginning of next clause upwards.

Return position if clause found, nil otherwise."
  (interactive)
  (py-up-base (quote py-clause-re)))

(defun py-up-block-or-clause ()
  "Go to the beginning of next block-or-clause upwards.

Return position if block-or-clause found, nil otherwise."
  (interactive)
  (py-up-base (quote py-block-or-clause-re)))

(defun py-up-def ()
  "Go to the beginning of next def upwards.

Return position if def found, nil otherwise."
  (interactive)
  (py-up-base (quote py-def-re)))

(defun py-up-def-or-class ()
  "Go to the beginning of next def-or-class upwards.

Return position if def-or-class found, nil otherwise."
  (interactive)
  (py-up-base (quote py-def-or-class-re)))

(defun py-up-minor-block ()
  "Go to the beginning of next minor-block upwards.

Return position if minor-block found, nil otherwise."
  (interactive)
  (py-up-base (quote py-minor-block-re)))

(defun py-up-block-bol ()
  "Go to the beginning of next block upwards.

Go to beginning of line.
Return position if block found, nil otherwise."
  (interactive)
  (and (py-up-base (quote py-block-re))
    (progn (beginning-of-line)(point))))

(defun py-up-class-bol ()
  "Go to the beginning of next class upwards.

Go to beginning of line.
Return position if class found, nil otherwise."
  (interactive)
  (and (py-up-base (quote py-class-re))
    (progn (beginning-of-line)(point))))

(defun py-up-clause-bol ()
  "Go to the beginning of next clause upwards.

Go to beginning of line.
Return position if clause found, nil otherwise."
  (interactive)
  (and (py-up-base (quote py-clause-re))
    (progn (beginning-of-line)(point))))

(defun py-up-block-or-clause-bol ()
  "Go to the beginning of next block-or-clause upwards.

Go to beginning of line.
Return position if block-or-clause found, nil otherwise."
  (interactive)
  (and (py-up-base (quote py-block-or-clause-re))
    (progn (beginning-of-line)(point))))

(defun py-up-def-bol ()
  "Go to the beginning of next def upwards.

Go to beginning of line.
Return position if def found, nil otherwise."
  (interactive)
  (and (py-up-base (quote py-def-re))
    (progn (beginning-of-line)(point))))

(defun py-up-def-or-class-bol ()
  "Go to the beginning of next def-or-class upwards.

Go to beginning of line.
Return position if def-or-class found, nil otherwise."
  (interactive)
  (and (py-up-base (quote py-def-or-class-re))
    (progn (beginning-of-line)(point))))

(defun py-up-minor-block-bol ()
  "Go to the beginning of next minor-block upwards.

Go to beginning of line.
Return position if minor-block found, nil otherwise."
  (interactive)
  (and (py-up-base (quote py-minor-block-re))
    (progn (beginning-of-line)(point))))

;; python-components-up.el ends here
(provide (quote python-components-up))
