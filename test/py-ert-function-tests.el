(ert-deftest py-ert-function-tests ()
  (should (functionp 'virtualenv-filter))
  (should (functionp 'virtualenv-append-path))
  (should (functionp 'virtualenv-add-to-path))
  (should (functionp 'virtualenv-current))
  (should (functionp 'virtualenv-deactivate))
  (should (functionp 'virtualenv-activate))
  (should (functionp 'virtualenv-deactivate))
  (should (functionp 'virtualenv-p))
  (should (functionp 'virtualenv-workon-complete))
  (should (functionp 'virtualenv-workon))
  (should (functionp 'py--beginning-of-block-p))
  (should (functionp 'py--beginning-of-clause-p))
  (should (functionp 'py--beginning-of-block-or-clause-p))
  (should (functionp 'py--beginning-of-def-p))
  (should (functionp 'py--beginning-of-class-p))
  (should (functionp 'py--beginning-of-def-or-class-p))
  (should (functionp 'py--beginning-of-if-block-p))
  (should (functionp 'py--beginning-of-try-block-p))
  (should (functionp 'py--beginning-of-minor-block-p))
  (should (functionp 'py--beginning-of-for-block-p))
  (should (functionp 'py--beginning-of-top-level-p))
  (should (functionp 'py--beginning-of-statement-p))
  (should (functionp 'py--beginning-of-expression-p))
  (should (functionp 'py--beginning-of-partial-expression-p))
  (should (functionp 'py--beginning-of-block-bol-p))
  (should (functionp 'py--beginning-of-clause-bol-p))
  (should (functionp 'py--beginning-of-block-or-clause-bol-p))
  (should (functionp 'py--beginning-of-def-bol-p))
  (should (functionp 'py--beginning-of-class-bol-p))
  (should (functionp 'py--beginning-of-def-or-class-bol-p))
  (should (functionp 'py--beginning-of-if-block-bol-p))
  (should (functionp 'py--beginning-of-try-block-bol-p))
  (should (functionp 'py--beginning-of-minor-block-bol-p))
  (should (functionp 'py--beginning-of-for-block-bol-p))
  (should (functionp 'py--beginning-of-statement-bol-p))
  (should (functionp 'py-up-statement))
  (should (functionp 'py-down-statement))
  (should (functionp 'py-up-base))
  (should (functionp 'py-down-base))
  (should (functionp 'py-up-base-bol))
  (should (functionp 'py-down-base-bol))
  (should (functionp 'py-up-block))
  (should (functionp 'py-up-minor-block))
  (should (functionp 'py-up-clause))
  (should (functionp 'py-up-block-or-clause))
  (should (functionp 'py-up-def))
  (should (functionp 'py-up-class))
  (should (functionp 'py-up-def-or-class))
  (should (functionp 'py-down-block))
  (should (functionp 'py-down-minor-block))
  (should (functionp 'py-down-clause))
  (should (functionp 'py-down-block-or-clause))
  (should (functionp 'py-down-def))
  (should (functionp 'py-down-class))
  (should (functionp 'py-down-def-or-class))
  (should (functionp 'py-up-block-bol))
  (should (functionp 'py-up-minor-block-bol))
  (should (functionp 'py-up-clause-bol))
  (should (functionp 'py-up-block-or-clause-bol))
  (should (functionp 'py-up-def-bol))
  (should (functionp 'py-up-class-bol))
  (should (functionp 'py-up-def-or-class-bol))
  (should (functionp 'py-down-block-bol))
  (should (functionp 'py-down-minor-block-bol))
  (should (functionp 'py-down-clause-bol))
  (should (functionp 'py-down-block-or-clause-bol))
  (should (functionp 'py-down-def-bol))
  (should (functionp 'py-down-class-bol))
  (should (functionp 'py-down-def-or-class-bol))
  (should (functionp 'py--end-of-statement-position))
  (should (functionp 'py--end-of-block-position))
  (should (functionp 'py--end-of-clause-position))
  (should (functionp 'py--end-of-block-or-clause-position))
  (should (functionp 'py--end-of-def-position))
  (should (functionp 'py--end-of-class-position))
  (should (functionp 'py--end-of-def-or-class-position))
  (should (functionp 'py--end-of-buffer-position))
  (should (functionp 'py--end-of-expression-position))
  (should (functionp 'py--end-of-partial-expression-position))
  (should (functionp 'py--end-of-minor-block-position))
  (should (functionp 'py--end-of-if-block-position))
  (should (functionp 'py--end-of-try-block-position))
  (should (functionp 'py--end-of-except-block-position))
  (should (functionp 'py--end-of-top-level-position))
  (should (functionp 'py--end-of-statement-position-bol))
  (should (functionp 'py--end-of-block-position-bol))
  (should (functionp 'py--end-of-clause-position-bol))
  (should (functionp 'py--end-of-block-or-clause-position-bol))
  (should (functionp 'py--end-of-def-position-bol))
  (should (functionp 'py--end-of-class-position-bol))
  (should (functionp 'py--end-of-minor-block-position-bol))
  (should (functionp 'py--end-of-if-block-position-bol))
  (should (functionp 'py--end-of-try-block-position-bol))
  (should (functionp 'py-kill-block))
  (should (functionp 'py-kill-clause))
  (should (functionp 'py-kill-block-or-clause))
  (should (functionp 'py-kill-def))
  (should (functionp 'py-kill-class))
  (should (functionp 'py-kill-def-or-class))
  (should (functionp 'py-kill-if-block))
  (should (functionp 'py-kill-try-block))
  (should (functionp 'py-kill-minor-block))
  (should (functionp 'py-kill-for-block))
  (should (functionp 'py-kill-top-level))
  (should (functionp 'py-kill-statement))
  (should (functionp 'py-kill-expression))
  (should (functionp 'py-kill-partial-expression))
  (should (functionp 'py-kill-block-bol))
  (should (functionp 'py-kill-clause-bol))
  (should (functionp 'py-kill-block-or-clause-bol))
  (should (functionp 'py-kill-def-bol))
  (should (functionp 'py-kill-class-bol))
  (should (functionp 'py-kill-def-or-class-bol))
  (should (functionp 'py-kill-if-block-bol))
  (should (functionp 'py-kill-try-block-bol))
  (should (functionp 'py-kill-minor-block-bol))
  (should (functionp 'py-kill-for-block-bol))
  (should (functionp 'py-kill-top-level-bol))
  (should (functionp 'py-kill-statement-bol))
  (should (functionp 'py-beginning-of-expression))
  (should (functionp 'py--beginning-of-expression-intern))
  (should (functionp 'py-end-of-expression))
  (should (functionp 'py--end-of-expression-intern))
  (should (functionp 'py-beginning-of-partial-expression))
  (should (functionp 'py-end-of-partial-expression))
  (should (functionp 'py-beginning-of-line))
  (should (functionp 'py-end-of-line))
  (should (functionp 'py-beginning-of-statement))
  (should (functionp 'py-beginning-of-statement-bol))
  (should (functionp 'py-end-of-statement))
  (should (functionp 'py-end-of-statement-bol))
  (should (functionp 'py-goto-statement-below))
  (should (functionp 'py-beginning-of-decorator))
  (should (functionp 'py-end-of-decorator))
  (should (functionp 'py-forward-line))
  (should (functionp 'py-go-to-beginning-of-comment))
  (should (functionp 'py--go-to-keyword))
  (should (functionp 'py--clause-lookup-keyword))
  (should (functionp 'py-leave-comment-or-string-backward))
  (should (functionp 'py-beginning-of-list-pps))
  (should (functionp 'py-forward-into-nomenclature))
  (should (functionp 'py-backward-into-nomenclature))
  (should (functionp 'match-paren))
  (should (functionp 'py--travel-current-indent))
  (should (functionp 'py-beginning-of-block-current-column))
  (should (functionp 'py--end-of-block-p))
  (should (functionp 'py--end-of-clause-p))
  (should (functionp 'py--end-of-block-or-clause-p))
  (should (functionp 'py--end-of-def-p))
  (should (functionp 'py--end-of-class-p))
  (should (functionp 'py--end-of-def-or-class-p))
  (should (functionp 'py--end-of-if-block-p))
  (should (functionp 'py--end-of-try-block-p))
  (should (functionp 'py--end-of-minor-block-p))
  (should (functionp 'py--end-of-for-block-p))
  (should (functionp 'py--end-of-top-level-p))
  (should (functionp 'py--end-of-statement-p))
  (should (functionp 'py--end-of-expression-p))
  (should (functionp 'py--end-of-partial-expression-p))
  (should (functionp 'py--end-of-block-bol-p))
  (should (functionp 'py--end-of-clause-bol-p))
  (should (functionp 'py--end-of-block-or-clause-bol-p))
  (should (functionp 'py--end-of-def-bol-p))
  (should (functionp 'py--end-of-class-bol-p))
  (should (functionp 'py--end-of-def-or-class-bol-p))
  (should (functionp 'py--end-of-if-block-bol-p))
  (should (functionp 'py--end-of-try-block-bol-p))
  (should (functionp 'py--end-of-minor-block-bol-p))
  (should (functionp 'py--end-of-for-block-bol-p))
  (should (functionp 'py--end-of-top-level-bol-p))
  (should (functionp 'py--end-of-statement-bol-p))
  (should (functionp 'py--fast-completion-get-completions))
  (should (functionp 'py--fast--do-completion-at-point))
  (should (functionp 'py--fast-complete-base))
  (should (functionp 'py-fast-complete))
  (should (functionp 'py--end-of-block-p))
  (should (functionp 'py--end-of-clause-p))
  (should (functionp 'py--end-of-block-or-clause-p))
  (should (functionp 'py--end-of-def-p))
  (should (functionp 'py--end-of-class-p))
  (should (functionp 'py--end-of-def-or-class-p))
  (should (functionp 'py--end-of-if-block-p))
  (should (functionp 'py--end-of-try-block-p))
  (should (functionp 'py--end-of-minor-block-p))
  (should (functionp 'py--end-of-for-block-p))
  (should (functionp 'py--end-of-top-level-p))
  (should (functionp 'py--end-of-statement-p))
  (should (functionp 'py--end-of-expression-p))
  (should (functionp 'py--end-of-partial-expression-p))
  (should (functionp 'py--end-of-block-bol-p))
  (should (functionp 'py--end-of-clause-bol-p))
  (should (functionp 'py--end-of-block-or-clause-bol-p))
  (should (functionp 'py--end-of-def-bol-p))
  (should (functionp 'py--end-of-class-bol-p))
  (should (functionp 'py--end-of-def-or-class-bol-p))
  (should (functionp 'py--end-of-if-block-bol-p))
  (should (functionp 'py--end-of-try-block-bol-p))
  (should (functionp 'py--end-of-minor-block-bol-p))
  (should (functionp 'py--end-of-for-block-bol-p))
  (should (functionp 'py--end-of-top-level-bol-p))
  (should (functionp 'py--end-of-statement-bol-p))
  (should (functionp 'py--all-shell-mode-setting))
  (should (functionp 'py-fast-process))
  (should (functionp 'py--filter-result))
  (should (functionp 'py--fast-send-string-no-output))
  (should (functionp 'py--fast-send-string-intern))
  (should (functionp 'py--fast-send-string))
  (should (functionp 'py-fast-send-string))
  (should (functionp 'py-process-region-fast))
  (should (functionp 'py-execute-statement-fast))
  (should (functionp 'py-execute-block-fast))
  (should (functionp 'py-execute-block-or-clause-fast))
  (should (functionp 'py-execute-def-fast))
  (should (functionp 'py-execute-class-fast))
  (should (functionp 'py-execute-def-or-class-fast))
  (should (functionp 'py-execute-expression-fast))
  (should (functionp 'py-execute-partial-expression-fast))
  (should (functionp 'py-execute-top-level-fast))
  (should (functionp 'py-execute-clause-fast))
  (should (functionp 'py-restore-window-configuration))
  (should (functionp 'py-shell-execute-string-now))
  (should (functionp 'py-switch-to-python))
  (should (functionp 'py-send-file))
  (should (functionp 'toggle-force-local-shell))
  (should (functionp 'py-force-local-shell-on))
  (should (functionp 'py-force-local-shell-off))
  (should (functionp 'toggle-force-py-shell-name-p))
  (should (functionp 'force-py-shell-name-p-on))
  (should (functionp 'force-py-shell-name-p-off))
  (should (functionp 'py-toggle-split-windows-on-execute))
  (should (functionp 'py-split-windows-on-execute-on))
  (should (functionp 'py-split-windows-on-execute-off))
  (should (functionp 'py-toggle-shell-switch-buffers-on-execute))
  (should (functionp 'py-shell-switch-buffers-on-execute-on))
  (should (functionp 'py-shell-switch-buffers-on-execute-off))
  (should (functionp 'py-guess-default-python))
  (should (functionp 'py-dirstack-hook))
  (should (functionp 'py-shell-dedicated))
  (should (functionp 'py-set-ipython-completion-command-string))
  (should (functionp 'py-ipython--module-completion-import))
  (should (functionp 'py--compose-buffer-name-initials))
  (should (functionp 'py--remove-home-directory-from-list))
  (should (functionp 'py--choose-buffer-name))
  (should (functionp 'py--jump-to-exception-intern))
  (should (functionp 'py--jump-to-exception))
  (should (functionp 'py-toggle-split-window-function))
  (should (functionp 'py--manage-windows-set-and-switch))
  (should (functionp 'py--alternative-split-windows-on-execute-function))
  (should (functionp 'py--get-splittable-window))
  (should (functionp 'py--manage-windows-split))
  (should (functionp 'py--display-windows))
  (should (functionp 'py--shell-manage-windows))
  (should (functionp 'py-kill-shell-unconditional))
  (should (functionp 'py-kill-default-shell-unconditional))
  (should (functionp 'py--report-executable))
  (should (functionp 'py--shell-make-comint))
  (should (functionp 'py--guess-buffer-name))
  (should (functionp 'py--configured-shell))
  (should (functionp 'py--grab-prompt-ps1))
  (should (functionp 'py--start-fast-process))
  (should (functionp 'py-shell))
  (should (functionp 'py-shell-get-process))
  (should (functionp 'py-switch-to-shell))
  (should (functionp 'py-which-execute-file-command))
  (should (functionp 'py--store-result-maybe))
  (should (functionp 'py--close-execution))
  (should (functionp 'py--execute-base))
  (should (functionp 'py--send-to-fast-process))
  (should (functionp 'py--execute-base-intern))
  (should (functionp 'py--execute-buffer-finally))
  (should (functionp 'py--fetch-error))
  (should (functionp 'py--fetch-result))
  (should (functionp 'py--postprocess-comint))
  (should (functionp 'py--execute-ge24.3))
  (should (functionp 'py-execute-region))
  (should (functionp 'py-execute-region-default))
  (should (functionp 'py-execute-region-no-switch))
  (should (functionp 'py-execute-region-dedicated))
  (should (functionp 'py-execute-region-switch))
  (should (functionp 'py-execute-region-default-dedicated))
  (should (functionp 'py-delete-temporary))
  (should (functionp 'py-execute-python-mode-v5))
  (should (functionp 'py--insert-offset-lines))
  (should (functionp 'py--execute-file-base))
  (should (functionp 'py-execute-file))
  (should (functionp 'py--current-working-directory))
  (should (functionp 'py--update-execute-directory-intern))
  (should (functionp 'py--update-execute-directory))
  (should (functionp 'py-execute-string))
  (should (functionp 'py-execute-string-dedicated))
  (should (functionp 'py--insert-execute-directory))
  (should (functionp 'py--fix-if-name-main-permission))
  (should (functionp 'py--fix-start-intern))
  (should (functionp 'py--fix-start))
  (should (functionp 'py-fetch-py-master-file))
  (should (functionp 'py-execute-import-or-reload))
  (should (functionp 'py--qualified-module-name))
  (should (functionp 'py-execute-buffer))
  (should (functionp 'py--execute-buffer-base))
  (should (functionp 'py-execute-buffer-dedicated))
  (should (functionp 'py-execute-buffer-switch))
  (should (functionp 'py-execute-buffer-no-switch))
  (should (functionp 'py-execute-buffer-dedicated-switch))
  (should (functionp 'py-execute-region-python))
  (should (functionp 'py-execute-region-python-switch))
  (should (functionp 'py-execute-region-python-no-switch))
  (should (functionp 'py-execute-region-python2))
  (should (functionp 'py-execute-region-python2-switch))
  (should (functionp 'py-execute-region-python2-no-switch))
  (should (functionp 'py-execute-region-python2.7))
  (should (functionp 'py-execute-region-python2.7-switch))
  (should (functionp 'py-execute-region-python2.7-no-switch))
  (should (functionp 'py-execute-region-python3))
  (should (functionp 'py-execute-region-python3-switch))
  (should (functionp 'py-execute-region-python3-no-switch))
  (should (functionp 'py-execute-region-python3.2))
  (should (functionp 'py-execute-region-python3.2-switch))
  (should (functionp 'py-execute-region-python3.2-no-switch))
  (should (functionp 'py-execute-region-ipython))
  (should (functionp 'py-execute-region-ipython-switch))
  (should (functionp 'py-execute-region-ipython-no-switch))
  (should (functionp 'py-execute-region-jython))
  (should (functionp 'py-execute-region-jython-switch))
  (should (functionp 'py-execute-region-jython-no-switch))
  (should (functionp 'py-execute-defun))
  (should (functionp 'py-process-file))
  (should (functionp 'py-execute-line))
  (should (functionp 'py-remove-overlays-at-point))
  (should (functionp 'py-mouseto-exception))
  (should (functionp 'py-goto-exception))
  (should (functionp 'py--find-next-exception))
  (should (functionp 'py-down-exception))
  (should (functionp 'py-up-exception))
  (should (functionp 'py--postprocess-intern))
  (should (functionp 'py--find-next-exception-prepare))
  (should (functionp 'python))
  (should (functionp 'ipython))
  (should (functionp 'python2))
  (should (functionp 'jython))
  (should (functionp 'python3))
  (should (functionp 'bpython))
  (should (functionp 'python-dedicated))
  (should (functionp 'ipython-dedicated))
  (should (functionp 'python2-dedicated))
  (should (functionp 'jython-dedicated))
  (should (functionp 'python3-dedicated))
  (should (functionp 'bpython-dedicated))
  (should (functionp 'python-switch))
  (should (functionp 'ipython-switch))
  (should (functionp 'python2-switch))
  (should (functionp 'jython-switch))
  (should (functionp 'python3-switch))
  (should (functionp 'bpython-switch))
  (should (functionp 'python-no-switch))
  (should (functionp 'ipython-no-switch))
  (should (functionp 'python2-no-switch))
  (should (functionp 'jython-no-switch))
  (should (functionp 'python3-no-switch))
  (should (functionp 'bpython-no-switch))
  (should (functionp 'python-switch-dedicated))
  (should (functionp 'ipython-switch-dedicated))
  (should (functionp 'python2-switch-dedicated))
  (should (functionp 'jython-switch-dedicated))
  (should (functionp 'python3-switch-dedicated))
  (should (functionp 'bpython-switch-dedicated))
  (should (functionp 'py-hide-base))
  (should (functionp 'py-show-base))
  (should (functionp 'py-hide-show))
  (should (functionp 'py-hide-region))
  (should (functionp 'py-show-region))
  (should (functionp 'py-hide-statement))
  (should (functionp 'py-show-statement))
  (should (functionp 'py-hide-block))
  (should (functionp 'py-show-block))
  (should (functionp 'py-hide-clause))
  (should (functionp 'py-show-clause))
  (should (functionp 'py-hide-block-or-clause))
  (should (functionp 'py-show-block-or-clause))
  (should (functionp 'py-hide-def))
  (should (functionp 'py-show-def))
  (should (functionp 'py-hide-class))
  (should (functionp 'py-show-class))
  (should (functionp 'py-hide-expression))
  (should (functionp 'py-show-expression))
  (should (functionp 'py-hide-partial-expression))
  (should (functionp 'py-show-partial-expression))
  (should (functionp 'py-hide-line))
  (should (functionp 'py-show-line))
  (should (functionp 'py-hide-top-level))
  (should (functionp 'py-show-top-level))
  (should (functionp 'py-copy-statement))
  (should (functionp 'py-copy-statement-bol))
  (should (functionp 'py-copy-top-level))
  (should (functionp 'py-copy-top-level-bol))
  (should (functionp 'py-copy-block))
  (should (functionp 'py-copy-block-bol))
  (should (functionp 'py-copy-clause))
  (should (functionp 'py-copy-clause-bol))
  (should (functionp 'py-copy-block-or-clause))
  (should (functionp 'py-copy-block-or-clause-bol))
  (should (functionp 'py-copy-def))
  (should (functionp 'py-copy-def-bol))
  (should (functionp 'py-copy-class))
  (should (functionp 'py-copy-class-bol))
  (should (functionp 'py-copy-def-or-class))
  (should (functionp 'py-copy-def-or-class-bol))
  (should (functionp 'py-copy-expression))
  (should (functionp 'py-copy-expression-bol))
  (should (functionp 'py-copy-partial-expression))
  (should (functionp 'py-copy-partial-expression-bol))
  (should (functionp 'py-copy-minor-block))
  (should (functionp 'py-copy-minor-block-bol))
  (should (functionp 'py-copy-statement))
  (should (functionp 'py-copy-top-level))
  (should (functionp 'py-copy-block))
  (should (functionp 'py-copy-clause))
  (should (functionp 'py-copy-block-or-clause))
  (should (functionp 'py-copy-def))
  (should (functionp 'py-copy-class))
  (should (functionp 'py-copy-def-or-class))
  (should (functionp 'py-copy-expression))
  (should (functionp 'py-copy-partial-expression))
  (should (functionp 'py-copy-minor-block))
  (should (functionp 'py-statement))
  (should (functionp 'py-top-level))
  (should (functionp 'py-block))
  (should (functionp 'py-clause))
  (should (functionp 'py-block-or-clause))
  (should (functionp 'py-def))
  (should (functionp 'py-class))
  (should (functionp 'py-def-or-class))
  (should (functionp 'py-expression))
  (should (functionp 'py-partial-expression))
  (should (functionp 'py-minor-block))
  (should (functionp 'py-output-buffer-filter))
  (should (functionp 'py-output-filter))
  (should (functionp 'py-send-string))
  (should (functionp 'py-copy-statement))
  (should (functionp 'py-copy-statement-bol))
  (should (functionp 'py-copy-top-level))
  (should (functionp 'py-copy-top-level-bol))
  (should (functionp 'py-copy-block))
  (should (functionp 'py-copy-block-bol))
  (should (functionp 'py-copy-clause))
  (should (functionp 'py-copy-clause-bol))
  (should (functionp 'py-copy-block-or-clause))
  (should (functionp 'py-copy-block-or-clause-bol))
  (should (functionp 'py-copy-def))
  (should (functionp 'py-copy-def-bol))
  (should (functionp 'py-copy-class))
  (should (functionp 'py-copy-class-bol))
  (should (functionp 'py-copy-def-or-class))
  (should (functionp 'py-copy-def-or-class-bol))
  (should (functionp 'py-copy-expression))
  (should (functionp 'py-copy-expression-bol))
  (should (functionp 'py-copy-partial-expression))
  (should (functionp 'py-copy-partial-expression-bol))
  (should (functionp 'py-copy-minor-block))
  (should (functionp 'py-copy-minor-block-bol))
  (should (functionp 'py-delete-statement))
  (should (functionp 'py-delete-top-level))
  (should (functionp 'py-delete-block))
  (should (functionp 'py-delete-clause))
  (should (functionp 'py-delete-block-or-clause))
  (should (functionp 'py-delete-def))
  (should (functionp 'py-delete-class))
  (should (functionp 'py-delete-def-or-class))
  (should (functionp 'py-delete-expression))
  (should (functionp 'py-delete-partial-expression))
  (should (functionp 'py-delete-minor-block))
  (should (functionp 'py-delete-paragraph-bol))
  (should (functionp 'py-delete-block-bol))
  (should (functionp 'py-delete-minor-block-bol))
  (should (functionp 'py-delete-clause-bol))
  (should (functionp 'py-delete-block-or-clause-bol))
  (should (functionp 'py-delete-def-bol))
  (should (functionp 'py-delete-class-bol))
  (should (functionp 'py-delete-def-or-class-bol))
  (should (functionp 'py-delete-statement-bol))
  (should (functionp 'py-delete-statement))
  (should (functionp 'py-delete-top-level))
  (should (functionp 'py-delete-block))
  (should (functionp 'py-delete-block-or-clause))
  (should (functionp 'py-delete-def))
  (should (functionp 'py-delete-class))
  (should (functionp 'py-delete-def-or-class))
  (should (functionp 'py-delete-expression))
  (should (functionp 'py-delete-partial-expression))
  (should (functionp 'py-delete-minor-block))
  (should (functionp 'py--beginning-of-statement-position))
  (should (functionp 'py--beginning-of-block-position))
  (should (functionp 'py--beginning-of-clause-position))
  (should (functionp 'py--beginning-of-block-or-clause-position))
  (should (functionp 'py--beginning-of-def-position))
  (should (functionp 'py--beginning-of-class-position))
  (should (functionp 'py--beginning-of-def-or-class-position))
  (should (functionp 'py--beginning-of-expression-position))
  (should (functionp 'py--beginning-of-partial-expression-position))
  (should (functionp 'py--beginning-of-minor-block-position))
  (should (functionp 'py--beginning-of-if-block-position))
  (should (functionp 'py--beginning-of-try-block-position))
  (should (functionp 'py--beginning-of-except-block-position))
  (should (functionp 'py--beginning-of-top-level-position))
  (should (functionp 'py--beginning-of-statement-position-bol))
  (should (functionp 'py--beginning-of-block-position-bol))
  (should (functionp 'py--beginning-of-clause-position-bol))
  (should (functionp 'py--beginning-of-block-or-clause-position-bol))
  (should (functionp 'py--beginning-of-def-position-bol))
  (should (functionp 'py--beginning-of-class-position-bol))
  (should (functionp 'py--beginning-of-def-or-class-position-bol))
  (should (functionp 'py--beginning-of-minor-block-position-bol))
  (should (functionp 'py--beginning-of-if-block-position-bol))
  (should (functionp 'py--beginning-of-try-block-position-bol))
  (should (functionp 'py--beginning-of-except-block-position-bol))
  (should (functionp 'py--beginning-of-top-level-position-bol))
  (should (functionp 'py-fill-string-django))
  (should (functionp 'py-fill-string-onetwo))
  (should (functionp 'py-fill-string-pep-257))
  (should (functionp 'py-fill-string-pep-257-nn))
  (should (functionp 'py-fill-string-symmetric))
  (should (functionp 'py-set-nil-docstring-style))
  (should (functionp 'py-set-pep-257-nn-docstring-style))
  (should (functionp 'py-set-pep-257-docstring-style))
  (should (functionp 'py-set-django-docstring-style))
  (should (functionp 'py-set-symmetric-docstring-style))
  (should (functionp 'py-set-onetwo-docstring-style))
  (should (functionp 'py-fill-decorator))
  (should (functionp 'py-fill-comment))
  (should (functionp 'py-fill-labelled-string))
  (should (functionp 'py--in-or-behind-or-before-a-docstring))
  (should (functionp 'py--string-fence-delete-spaces))
  (should (functionp 'py--fill-fix-end))
  (should (functionp 'py--fill-docstring-base))
  (should (functionp 'py--fill-docstring-last-line))
  (should (functionp 'py--fill-docstring-first-line))
  (should (functionp 'py--fill-docstring))
  (should (functionp 'py-fill-string))
  (should (functionp 'py-fill-paragraph))
  (should (functionp 'py-insert-default-shebang))
  (should (functionp 'py--top-level-form-p))
  (should (functionp 'py-indent-line-outmost))
  (should (functionp 'py--indent-fix-region-intern))
  (should (functionp 'py--indent-line-intern))
  (should (functionp 'py--indent-line-base))
  (should (functionp 'py--calculate-indent-backwards))
  (should (functionp 'py-indent-line))
  (should (functionp 'py--delete-trailing-whitespace))
  (should (functionp 'py-newline-and-indent))
  (should (functionp 'py-newline-and-dedent))
  (should (functionp 'py-toggle-indent-tabs-mode))
  (should (functionp 'py-indent-tabs-mode))
  (should (functionp 'py-indent-tabs-mode-on))
  (should (functionp 'py-indent-tabs-mode-off))
  (should (functionp 'py-guessed-sanity-check))
  (should (functionp 'py--guess-indent-final))
  (should (functionp 'py--guess-indent-forward))
  (should (functionp 'py--guess-indent-backward))
  (should (functionp 'py-guess-indent-offset))
  (should (functionp 'py--comment-indent-function))
  (should (functionp 'py-narrow-to-defun))
  (should (functionp 'py-beginning-of-paragraph))
  (should (functionp 'py-end-of-paragraph))
  (should (functionp 'py-indent-and-forward))
  (should (functionp 'py-indent-region))
  (should (functionp 'py--beginning-of-buffer-position))
  (should (functionp 'py--end-of-buffer-position))
  (should (functionp 'py--bounds-of-declarations))
  (should (functionp 'py-beginning-of-declarations))
  (should (functionp 'py-end-of-declarations))
  (should (functionp 'py-declarations))
  (should (functionp 'py-kill-declarations))
  (should (functionp 'py--bounds-of-statements))
  (should (functionp 'py-beginning-of-statements))
  (should (functionp 'py-end-of-statements))
  (should (functionp 'py-statements))
  (should (functionp 'py-kill-statements))
  (should (functionp 'py--join-words-wrapping))
  (should (functionp 'py-insert-super))
  (should (functionp 'py-comment-region))
  (should (functionp 'py-delete-comments-in-def-or-class))
  (should (functionp 'py-delete-comments-in-class))
  (should (functionp 'py-delete-comments-in-block))
  (should (functionp 'py-delete-comments-in-region))
  (should (functionp 'py--delete-comments-intern))
  (should (functionp 'py-update-gud-pdb-history))
  (should (functionp 'py--pdbtrack-overlay-arrow))
  (should (functionp 'py--pdbtrack-track-stack-file))
  (should (functionp 'py--pdbtrack-map-filename))
  (should (functionp 'py--pdbtrack-get-source-buffer))
  (should (functionp 'py--pdbtrack-grub-for-buffer))
  (should (functionp 'py-pdbtrack-toggle-stack-tracking))
  (should (functionp 'turn-on-pdbtrack))
  (should (functionp 'turn-off-pdbtrack))
  (should (functionp 'py-execute-statement-pdb))
  (should (functionp 'py-execute-region-pdb))
  (should (functionp 'py-pdb-execute-statement))
  (should (functionp 'py-pdb-help))
  (should (functionp 'py-pdb-break))
  (should (functionp 'py-end-of-block))
  (should (functionp 'py-end-of-block-bol))
  (should (functionp 'py-end-of-clause))
  (should (functionp 'py-end-of-clause-bol))
  (should (functionp 'py-end-of-block-or-clause))
  (should (functionp 'py-end-of-block-or-clause-bol))
  (should (functionp 'py-end-of-def))
  (should (functionp 'py-end-of-def-bol))
  (should (functionp 'py-end-of-class))
  (should (functionp 'py-end-of-class-bol))
  (should (functionp 'py-end-of-def-or-class))
  (should (functionp 'py-end-of-def-or-class-bol))
  (should (functionp 'py-end-of-if-block))
  (should (functionp 'py-end-of-if-block-bol))
  (should (functionp 'py-end-of-try-block))
  (should (functionp 'py-end-of-try-block-bol))
  (should (functionp 'py-end-of-minor-block))
  (should (functionp 'py-end-of-minor-block-bol))
  (should (functionp 'py-end-of-for-block))
  (should (functionp 'py-end-of-for-block-bol))
  (should (functionp 'py-end-of-except-block))
  (should (functionp 'py-end-of-except-block-bol))
  (should (functionp 'py-execute-statement))
  (should (functionp 'py-execute-block))
  (should (functionp 'py-execute-block-or-clause))
  (should (functionp 'py-execute-def))
  (should (functionp 'py-execute-class))
  (should (functionp 'py-execute-def-or-class))
  (should (functionp 'py-execute-expression))
  (should (functionp 'py-execute-partial-expression))
  (should (functionp 'py-execute-top-level))
  (should (functionp 'py-execute-clause))
  (should (functionp 'py--end-of-statement-position))
  (should (functionp 'py--end-of-block-position))
  (should (functionp 'py--end-of-clause-position))
  (should (functionp 'py--end-of-block-or-clause-position))
  (should (functionp 'py--end-of-def-position))
  (should (functionp 'py--end-of-class-position))
  (should (functionp 'py--end-of-def-or-class-position))
  (should (functionp 'py--end-of-buffer-position))
  (should (functionp 'py--end-of-expression-position))
  (should (functionp 'py--end-of-partial-expression-position))
  (should (functionp 'py--end-of-minor-block-position))
  (should (functionp 'py--end-of-if-block-position))
  (should (functionp 'py--end-of-try-block-position))
  (should (functionp 'py--end-of-except-block-position))
  (should (functionp 'py--end-of-top-level-position))
  (should (functionp 'py--end-of-statement-position-bol))
  (should (functionp 'py--end-of-block-position-bol))
  (should (functionp 'py--end-of-clause-position-bol))
  (should (functionp 'py--end-of-block-or-clause-position-bol))
  (should (functionp 'py--end-of-def-position-bol))
  (should (functionp 'py--end-of-class-position-bol))
  (should (functionp 'py--end-of-minor-block-position-bol))
  (should (functionp 'py--end-of-if-block-position-bol))
  (should (functionp 'py--end-of-try-block-position-bol))
  (should (functionp 'py-toggle-highlight-indentation))
  (should (functionp 'py-highlight-indentation-off))
  (should (functionp 'py-highlight-indentation-on))
  (should (functionp 'py-toggle-smart-indentation))
  (should (functionp 'py-smart-indentation-on))
  (should (functionp 'py-smart-indentation-off))
  (should (functionp 'py-toggle-sexp-function))
  (should (functionp 'py-toggle-autopair-mode))
  (should (functionp 'py-autopair-mode-on))
  (should (functionp 'py-autopair-mode-off))
  (should (functionp 'toggle-py-smart-operator-mode-p))
  (should (functionp 'py-smart-operator-mode-p-on))
  (should (functionp 'py-smart-operator-mode-p-off))
  (should (functionp 'toggle-py-switch-buffers-on-execute-p))
  (should (functionp 'py-switch-buffers-on-execute-p-on))
  (should (functionp 'py-switch-buffers-on-execute-p-off))
  (should (functionp 'toggle-py-split-window-on-execute))
  (should (functionp 'py-split-window-on-execute-on))
  (should (functionp 'py-split-window-on-execute-off))
  (should (functionp 'toggle-py-fontify-shell-buffer-p))
  (should (functionp 'py-fontify-shell-buffer-p-on))
  (should (functionp 'py-fontify-shell-buffer-p-off))
  (should (functionp 'toggle-python-mode-v5-behavior-p))
  (should (functionp 'python-mode-v5-behavior-p-on))
  (should (functionp 'python-mode-v5-behavior-p-off))
  (should (functionp 'toggle-py-jump-on-exception))
  (should (functionp 'py-jump-on-exception-on))
  (should (functionp 'py-jump-on-exception-off))
  (should (functionp 'toggle-py-use-current-dir-when-execute-p))
  (should (functionp 'py-use-current-dir-when-execute-p-on))
  (should (functionp 'py-use-current-dir-when-execute-p-off))
  (should (functionp 'toggle-py-electric-comment-p))
  (should (functionp 'py-electric-comment-p-on))
  (should (functionp 'py-electric-comment-p-off))
  (should (functionp 'toggle-py-underscore-word-syntax-p))
  (should (functionp 'py-underscore-word-syntax-p-on))
  (should (functionp 'py-underscore-word-syntax-p-off))
  (should (functionp 'py-beginning-of-block))
  (should (functionp 'py-beginning-of-clause))
  (should (functionp 'py-beginning-of-block-or-clause))
  (should (functionp 'py-beginning-of-def))
  (should (functionp 'py-beginning-of-class))
  (should (functionp 'py-beginning-of-def-or-class))
  (should (functionp 'py-beginning-of-if-block))
  (should (functionp 'py-beginning-of-try-block))
  (should (functionp 'py-beginning-of-minor-block))
  (should (functionp 'py-beginning-of-for-block))
  (should (functionp 'py-beginning-of-except-block))
  (should (functionp 'py-beginning-of-block-bol))
  (should (functionp 'py-beginning-of-clause-bol))
  (should (functionp 'py-beginning-of-block-or-clause-bol))
  (should (functionp 'py-beginning-of-def-bol))
  (should (functionp 'py-beginning-of-class-bol))
  (should (functionp 'py-beginning-of-def-or-class-bol))
  (should (functionp 'py-beginning-of-if-block-bol))
  (should (functionp 'py-beginning-of-try-block-bol))
  (should (functionp 'py-beginning-of-minor-block-bol))
  (should (functionp 'py-beginning-of-for-block-bol))
  (should (functionp 'py-beginning-of-except-block-bol))
  (should (functionp 'py-comment-auto-fill))
  (should (functionp 'py-comment-auto-fill-on))
  (should (functionp 'py-comment-auto-fill-off))
  (should (functionp 'py-beginning-of-block))
  (should (functionp 'py-beginning-of-clause))
  (should (functionp 'py-beginning-of-block-or-clause))
  (should (functionp 'py-beginning-of-def))
  (should (functionp 'py-beginning-of-class))
  (should (functionp 'py-beginning-of-def-or-class))
  (should (functionp 'py-beginning-of-if-block))
  (should (functionp 'py-beginning-of-elif-block))
  (should (functionp 'py-beginning-of-else-block))
  (should (functionp 'py-beginning-of-try-block))
  (should (functionp 'py-beginning-of-minor-block))
  (should (functionp 'py-beginning-of-for-block))
  (should (functionp 'py-beginning-of-except-block))
  (should (functionp 'py-beginning-of-block-bol))
  (should (functionp 'py-beginning-of-clause-bol))
  (should (functionp 'py-beginning-of-block-or-clause-bol))
  (should (functionp 'py-beginning-of-def-bol))
  (should (functionp 'py-beginning-of-class-bol))
  (should (functionp 'py-beginning-of-def-or-class-bol))
  (should (functionp 'py-beginning-of-if-block-bol))
  (should (functionp 'py-beginning-of-elif-block-bol))
  (should (functionp 'py-beginning-of-else-block-bol))
  (should (functionp 'py-beginning-of-try-block-bol))
  (should (functionp 'py-beginning-of-minor-block-bol))
  (should (functionp 'py-beginning-of-for-block-bol))
  (should (functionp 'py-beginning-of-except-block-bol))
  (should (functionp 'py-indent-forward-line))
  (should (functionp 'py-dedent-forward-line))
  (should (functionp 'py-dedent))
  (should (functionp 'py--close-intern))
  (should (functionp 'py-close-def))
  (should (functionp 'py-close-class))
  (should (functionp 'py-close-clause))
  (should (functionp 'py-close-block))
  (should (functionp 'py-class-at-point))
  (should (functionp 'ar-py-function-at-point))
  (should (functionp 'ar-py-beginning-of-function))
  (should (functionp 'ar-py-beginning-of-class))
  (should (functionp 'ar-py-end-of-function))
  (should (functionp 'ar-py-line-at-point))
  (should (functionp 'ar-py-looking-at-keywords-p))
  (should (functionp 'ar-py-match-paren-mode))
  (should (functionp 'ar-py-match-paren))
  (should (functionp 'ar-py-documentation))
  (should (functionp 'eva))
  (should (functionp 'pst-here))
  (should (functionp 'py-printform-insert))
  (should (functionp 'py-line-to-printform-python2))
  (should (functionp 'py-boolswitch))
  (should (functionp 'py-end-of-block))
  (should (functionp 'py-end-of-block-bol))
  (should (functionp 'py-end-of-clause))
  (should (functionp 'py-end-of-clause-bol))
  (should (functionp 'py-end-of-block-or-clause))
  (should (functionp 'py-end-of-block-or-clause-bol))
  (should (functionp 'py-end-of-def))
  (should (functionp 'py-end-of-def-bol))
  (should (functionp 'py-end-of-class))
  (should (functionp 'py-end-of-class-bol))
  (should (functionp 'py-end-of-def-or-class))
  (should (functionp 'py-end-of-def-or-class-bol))
  (should (functionp 'py-end-of-if-block))
  (should (functionp 'py-end-of-if-block-bol))
  (should (functionp 'py-end-of-elif-block))
  (should (functionp 'py-end-of-elif-block-bol))
  (should (functionp 'py-end-of-else-block))
  (should (functionp 'py-end-of-else-block-bol))
  (should (functionp 'py-end-of-try-block))
  (should (functionp 'py-end-of-try-block-bol))
  (should (functionp 'py-end-of-minor-block))
  (should (functionp 'py-end-of-minor-block-bol))
  (should (functionp 'py-end-of-for-block))
  (should (functionp 'py-end-of-for-block-bol))
  (should (functionp 'py-end-of-except-block))
  (should (functionp 'py-end-of-except-block-bol))
  (should (functionp 'py-mark-paragraph))
  (should (functionp 'py-mark-block))
  (should (functionp 'py-mark-minor-block))
  (should (functionp 'py-mark-clause))
  (should (functionp 'py-mark-block-or-clause))
  (should (functionp 'py-mark-def))
  (should (functionp 'py-mark-class))
  (should (functionp 'py-mark-def-or-class))
  (should (functionp 'py-mark-line))
  (should (functionp 'py-mark-statement))
  (should (functionp 'py-mark-comment))
  (should (functionp 'py-mark-top-level))
  (should (functionp 'py-mark-partial-expression))
  (should (functionp 'py-mark-expression))
  (should (functionp 'py-mark-paragraph-bol))
  (should (functionp 'py-mark-block-bol))
  (should (functionp 'py-mark-minor-block-bol))
  (should (functionp 'py-mark-clause-bol))
  (should (functionp 'py-mark-block-or-clause-bol))
  (should (functionp 'py-mark-def-bol))
  (should (functionp 'py-mark-class-bol))
  (should (functionp 'py-mark-def-or-class-bol))
  (should (functionp 'py-mark-line-bol))
  (should (functionp 'py-mark-statement-bol))
  (should (functionp 'py-mark-comment-bol))
  (should (functionp 'py-mark-top-level-bol))
  (should (functionp 'py-mark-partial-expression-bol))
  (should (functionp 'py-mark-expression-bol))
  (should (functionp 'py--kill-emacs-hook))
  (should (functionp 'py-python-version))
  (should (functionp 'py-version))
  (should (functionp 'py-history-input-filter))
  (should (functionp 'py-load-file))
  (should (functionp 'py-proc))
  (should (functionp 'py--shell-simple-send))
  (should (functionp 'py-guess-pdb-path))
  (should (functionp 'py-switch-shell))
  (should (functionp 'py-toggle-local-default-use))
  (should (functionp 'py--input-filter))
  (should (functionp 'py--set-auto-fill-values))
  (should (functionp 'py--run-auto-fill-timer))
  (should (functionp 'py--unfontify-banner-intern))
  (should (functionp 'py--unfontify-banner))
  (should (functionp 'py--run-unfontify-timer))
  (should (functionp 'py-complete-auto))
  (should (functionp 'py-set-command-args))
  (should (functionp 'py---emacs-version-greater-23))
  (should (functionp 'py-beginning-of-commented-section))
  (should (functionp 'py--empty-arglist-indent))
  (should (functionp 'py-symbol-at-point))
  (should (functionp 'py-kill-buffer-unconditional))
  (should (functionp 'py--line-backward-maybe))
  (should (functionp 'py--after-empty-line))
  (should (functionp 'py-compute-indentation))
  (should (functionp 'py--fetch-previous-indent))
  (should (functionp 'py-continuation-offset))
  (should (functionp 'py-indentation-of-statement))
  (should (functionp 'py-list-beginning-position))
  (should (functionp 'py-end-of-list-position))
  (should (functionp 'py--in-comment-p))
  (should (functionp 'py-in-triplequoted-string-p))
  (should (functionp 'py-in-string-p))
  (should (functionp 'py-in-statement-p))
  (should (functionp 'py-beginning-of-top-level-p))
  (should (functionp 'py--beginning-of-line-p))
  (should (functionp 'py--beginning-of-buffer-p))
  (should (functionp 'py--beginning-of-paragraph-p))
  (should (functionp 'py--end-of-line-p))
  (should (functionp 'py--end-of-paragraph-p))
  (should (functionp 'py--statement-opens-block-p))
  (should (functionp 'py--statement-opens-base))
  (should (functionp 'py--statement-opens-clause-p))
  (should (functionp 'py--statement-opens-block-or-clause-p))
  (should (functionp 'py--statement-opens-class-p))
  (should (functionp 'py--statement-opens-def-p))
  (should (functionp 'py--statement-opens-def-or-class-p))
  (should (functionp 'py--record-list-error))
  (should (functionp 'py--message-error))
  (should (functionp 'py--end-base))
  (should (functionp 'py--look-downward-for-beginning))
  (should (functionp 'py-look-downward-for-clause))
  (should (functionp 'py-current-defun))
  (should (functionp 'py-sort-imports))
  (should (functionp 'py--in-literal))
  (should (functionp 'py-count-lines))
  (should (functionp 'py-which-function))
  (should (functionp 'py--point))
  (should (functionp 'py-install-search-local))
  (should (functionp 'py-install-local-shells))
  (should (functionp 'py-end-of-string))
  (should (functionp 'py--until-found))
  (should (functionp 'py--delay-process-dependent))
  (should (functionp 'py--send-string-no-output))
  (should (functionp 'py--send-string-return-output))
  (should (functionp 'py-which-def-or-class))
  (should (functionp 'py--beginning-of-form-intern))
  (should (functionp 'py--beginning-of-prepare))
  (should (functionp 'py--fetch-first-python-buffer))
  (should (functionp 'py-unload-python-el))
  (should (functionp 'py--skip-to-semicolon-backward))
  (should (functionp 'py--eos-in-string))
  (should (functionp 'py--end-of-comment-intern))
  (should (functionp 'py--skip-to-comment-or-semicolon))
  (should (functionp 'py-beginning-of-top-level))
  (should (functionp 'py-end-of-top-level))
  (should (functionp 'py-end-of-top-level-bol))
  (should (functionp 'py-up))
  (should (functionp 'py-down))
  (should (functionp 'py--beginning-of-line-form))
  (should (functionp 'py--mark-base))
  (should (functionp 'py--mark-base-bol))
  (should (functionp 'py-mark-base))
  (should (functionp 'py-beginning))
  (should (functionp 'py-end))
  (should (functionp 'py-beginning-of-buffer))
  (should (functionp 'py-end-of-buffer))
  (should (functionp 'py-backward-same-level))
  (should (functionp 'py--end-of-line-p))
  (should (functionp 'py--end-of-buffer-p))
  (should (functionp 'py--bounds-of-region))
  (should (functionp 'py--beginning-of-paragraph-position))
  (should (functionp 'py--end-of-paragraph-position))
  (should (functionp 'py--beginning-of-comment-position))
  (should (functionp 'py--end-of-comment-position))
  (should (functionp 'py-info-lookup-symbol))
  (should (functionp 'python-after-info-look))
  (should (functionp 'py--warn-tmp-files-left))
  (should (functionp 'py-fetch-docu))
  (should (functionp 'py-info-current-defun))
  (should (functionp 'py-help-at-point))
  (should (functionp 'py--dump-help-string))
  (should (functionp 'py-describe-mode))
  (should (functionp 'py-find-definition))
  (should (functionp 'py-find-imports))
  (should (functionp 'py-update-imports))
  (should (functionp 'py-pep8-run))
  (should (functionp 'py-pep8-help))
  (should (functionp 'py-pylint-run))
  (should (functionp 'py-pylint-help))
  (should (functionp 'py-pylint-doku))
  (should (functionp 'py-pyflakes-run))
  (should (functionp 'py-pyflakes-help))
  (should (functionp 'py-pyflakespep8-run))
  (should (functionp 'py-pyflakespep8-help))
  (should (functionp 'py-pychecker-run))
  (should (functionp 'py-check-command))
  (should (functionp 'py-flake8-run))
  (should (functionp 'py-flake8-help))
  (should (functionp 'string-strip))
  (should (functionp 'py-nesting-level))
  (should (functionp 'py-ffap-module-path))
  (should (functionp 'py-toggle-flymake-intern))
  (should (functionp 'pylint-flymake-mode))
  (should (functionp 'pyflakes-flymake-mode))
  (should (functionp 'pychecker-flymake-mode))
  (should (functionp 'pep8-flymake-mode))
  (should (functionp 'pyflakespep8-flymake-mode))
  (should (functionp 'variables-state))
  (should (functionp 'variables-base-state))
  (should (functionp 'py-kill-block))
  (should (functionp 'py-kill-clause))
  (should (functionp 'py-kill-block-or-clause))
  (should (functionp 'py-kill-def))
  (should (functionp 'py-kill-class))
  (should (functionp 'py-kill-def-or-class))
  (should (functionp 'py-kill-if-block))
  (should (functionp 'py-kill-try-block))
  (should (functionp 'py-kill-minor-block))
  (should (functionp 'py-kill-for-block))
  (should (functionp 'py-kill-top-level))
  (should (functionp 'py-kill-statement))
  (should (functionp 'py-kill-expression))
  (should (functionp 'py-kill-partial-expression))
  (should (functionp 'py-kill-block-bol))
  (should (functionp 'py-kill-clause-bol))
  (should (functionp 'py-kill-block-or-clause-bol))
  (should (functionp 'py-kill-def-bol))
  (should (functionp 'py-kill-class-bol))
  (should (functionp 'py-kill-def-or-class-bol))
  (should (functionp 'py-kill-if-block-bol))
  (should (functionp 'py-kill-try-block-bol))
  (should (functionp 'py-kill-minor-block-bol))
  (should (functionp 'py-kill-for-block-bol))
  (should (functionp 'py-kill-top-level-bol))
  (should (functionp 'py-kill-statement-bol))
  (should (functionp 'py--bounds-of-statement))
  (should (functionp 'py--bounds-of-block))
  (should (functionp 'py--bounds-of-clause))
  (should (functionp 'py--bounds-of-block-or-clause))
  (should (functionp 'py--bounds-of-def))
  (should (functionp 'py--bounds-of-class))
  (should (functionp 'py--bounds-of-def-or-class))
  (should (functionp 'py--bounds-of-buffer))
  (should (functionp 'py--bounds-of-expression))
  (should (functionp 'py--bounds-of-partial-expression))
  (should (functionp 'py--bounds-of-minor-block))
  (should (functionp 'py--bounds-of-if-block))
  (should (functionp 'py--bounds-of-try-block))
  (should (functionp 'py--bounds-of-except-block))
  (should (functionp 'py--bounds-of-top-level))
  (should (functionp 'py--bounds-of-statement-bol))
  (should (functionp 'py--bounds-of-block-bol))
  (should (functionp 'py--bounds-of-clause-bol))
  (should (functionp 'py--bounds-of-block-or-clause-bol))
  (should (functionp 'py--bounds-of-def-bol))
  (should (functionp 'py--bounds-of-class-bol))
  (should (functionp 'py--bounds-of-minor-block-bol))
  (should (functionp 'py--bounds-of-if-block-bol))
  (should (functionp 'py--bounds-of-try-block-bol))
  (should (functionp 'py-smart-operator-check))
  (should (functionp 'py-autopair-check))
  (should (functionp 'py--set-ffap-form))
  (should (functionp 'py--quote-syntax))
  (should (functionp 'py--delete-all-but-first-prompt))
  (should (functionp 'py--python-send-setup-code-intern))
  (should (functionp 'py--python-send-completion-setup-code))
  (should (functionp 'py--python-send-ffap-setup-code))
  (should (functionp 'py--python-send-eldoc-setup-code))
  (should (functionp 'py--ipython-import-module-completion))
  (should (functionp 'py--docstring-p))
  (should (functionp 'py--font-lock-syntactic-face-function))
  (should (functionp 'py-choose-shell-by-shebang))
  (should (functionp 'py--choose-shell-by-import))
  (should (functionp 'py-choose-shell-by-path))
  (should (functionp 'py-which-python))
  (should (functionp 'py-python-current-environment))
  (should (functionp 'py--cleanup-process-name))
  (should (functionp 'py-choose-shell))
  (should (functionp 'py--normalize-directory))
  (should (functionp 'py-install-directory-check))
  (should (functionp 'py-guess-py-install-directory))
  (should (functionp 'py-load-pymacs))
  (should (functionp 'py-set-load-path))
  (should (functionp 'py-separator-char))
  (should (functionp 'pps-emacs-version))
  (should (functionp 'py-in-string-or-comment-p))
  (should (functionp 'py-electric-colon))
  (should (functionp 'py-electric-space))
  (should (functionp 'py-electric-comment))
  (should (functionp 'py-empty-out-list-backward))
  (should (functionp 'py-electric-backspace))
  (should (functionp 'py-electric-delete))
  (should (functionp 'py-electric-yank))
  (should (functionp 'py--beginning-of-statement-position))
  (should (functionp 'py--beginning-of-block-position))
  (should (functionp 'py--beginning-of-clause-position))
  (should (functionp 'py--beginning-of-block-or-clause-position))
  (should (functionp 'py--beginning-of-def-position))
  (should (functionp 'py--beginning-of-class-position))
  (should (functionp 'py--beginning-of-def-or-class-position))
  (should (functionp 'py--beginning-of-expression-position))
  (should (functionp 'py--beginning-of-partial-expression-position))
  (should (functionp 'py--beginning-of-minor-block-position))
  (should (functionp 'py--beginning-of-if-block-position))
  (should (functionp 'py--beginning-of-try-block-position))
  (should (functionp 'py--beginning-of-except-block-position))
  (should (functionp 'py--beginning-of-top-level-position))
  (should (functionp 'py--beginning-of-statement-position-bol))
  (should (functionp 'py--beginning-of-block-position-bol))
  (should (functionp 'py--beginning-of-clause-position-bol))
  (should (functionp 'py--beginning-of-block-or-clause-position-bol))
  (should (functionp 'py--beginning-of-def-position-bol))
  (should (functionp 'py--beginning-of-class-position-bol))
  (should (functionp 'py--beginning-of-def-or-class-position-bol))
  (should (functionp 'py--beginning-of-minor-block-position-bol))
  (should (functionp 'py--beginning-of-if-block-position-bol))
  (should (functionp 'py--beginning-of-try-block-position-bol))
  (should (functionp 'py--beginning-of-except-block-position-bol))
  (should (functionp 'py--beginning-of-top-level-position-bol))
  (should (functionp 'py-beginning-of-comment))
  (should (functionp 'py-end-of-comment))
  (should (functionp 'py--uncomment-intern))
  (should (functionp 'py-uncomment))
  (should (functionp 'py-comment-region))
  (should (functionp 'py-comment-block))
  (should (functionp 'py-comment-minor-block))
  (should (functionp 'py-comment-top-level))
  (should (functionp 'py-comment-clause))
  (should (functionp 'py-comment-block-or-clause))
  (should (functionp 'py-comment-def))
  (should (functionp 'py-comment-class))
  (should (functionp 'py-comment-def-or-class))
  (should (functionp 'py-comment-statement))
  (should (functionp 'py-delete-statement))
  (should (functionp 'py-delete-top-level))
  (should (functionp 'py-delete-block))
  (should (functionp 'py-delete-clause))
  (should (functionp 'py-delete-block-or-clause))
  (should (functionp 'py-delete-def))
  (should (functionp 'py-delete-class))
  (should (functionp 'py-delete-def-or-class))
  (should (functionp 'py-delete-expression))
  (should (functionp 'py-delete-partial-expression))
  (should (functionp 'py-delete-minor-block))
  (should (functionp 'py-delete-paragraph-bol))
  (should (functionp 'py-delete-block-bol))
  (should (functionp 'py-delete-minor-block-bol))
  (should (functionp 'py-delete-clause-bol))
  (should (functionp 'py-delete-block-or-clause-bol))
  (should (functionp 'py-delete-def-bol))
  (should (functionp 'py-delete-class-bol))
  (should (functionp 'py-delete-def-or-class-bol))
  (should (functionp 'py-delete-statement-bol))
  (should (functionp 'py-switch-imenu-index-function))
  (should (functionp 'py--imenu-create-index))
  (should (functionp 'py--imenu-create-index-engine))
  (should (functionp 'py--imenu-create-index-new-intern))
  (should (functionp 'py--imenu-create-index-new))
  (should (functionp 'py-execute-file-python))
  (should (functionp 'py-execute-file-python-switch))
  (should (functionp 'py-execute-file-python-no-switch))
  (should (functionp 'py-execute-file-python-dedicated))
  (should (functionp 'py-execute-file-python-dedicated-switch))
  (should (functionp 'py-execute-file-ipython))
  (should (functionp 'py-execute-file-ipython-switch))
  (should (functionp 'py-execute-file-ipython-no-switch))
  (should (functionp 'py-execute-file-ipython-dedicated))
  (should (functionp 'py-execute-file-ipython-dedicated-switch))
  (should (functionp 'py-execute-file-python3))
  (should (functionp 'py-execute-file-python3-switch))
  (should (functionp 'py-execute-file-python3-no-switch))
  (should (functionp 'py-execute-file-python3-dedicated))
  (should (functionp 'py-execute-file-python3-dedicated-switch))
  (should (functionp 'py-execute-file-python2))
  (should (functionp 'py-execute-file-python2-switch))
  (should (functionp 'py-execute-file-python2-no-switch))
  (should (functionp 'py-execute-file-python2-dedicated))
  (should (functionp 'py-execute-file-python2-dedicated-switch))
  (should (functionp 'py-execute-file-python2.7))
  (should (functionp 'py-execute-file-python2.7-switch))
  (should (functionp 'py-execute-file-python2.7-no-switch))
  (should (functionp 'py-execute-file-python2.7-dedicated))
  (should (functionp 'py-execute-file-python2.7-dedicated-switch))
  (should (functionp 'py-execute-file-jython))
  (should (functionp 'py-execute-file-jython-switch))
  (should (functionp 'py-execute-file-jython-no-switch))
  (should (functionp 'py-execute-file-jython-dedicated))
  (should (functionp 'py-execute-file-jython-dedicated-switch))
  (should (functionp 'py-execute-file-python3.2))
  (should (functionp 'py-execute-file-python3.2-switch))
  (should (functionp 'py-execute-file-python3.2-no-switch))
  (should (functionp 'py-execute-file-python3.2-dedicated))
  (should (functionp 'py-execute-file-python3.2-dedicated-switch))
  (should (functionp 'py-execute-file-python3.3))
  (should (functionp 'py-execute-file-python3.3-switch))
  (should (functionp 'py-execute-file-python3.3-no-switch))
  (should (functionp 'py-execute-file-python3.3-dedicated))
  (should (functionp 'py-execute-file-python3.3-dedicated-switch))
  (should (functionp 'py-execute-file-bpython))
  (should (functionp 'py-execute-file-bpython-switch))
  (should (functionp 'py-execute-file-bpython-no-switch))
  (should (functionp 'py-execute-file-bpython-dedicated))
  (should (functionp 'py-execute-file-bpython-dedicated-switch))
  (should (functionp 'py-mark-paragraph))
  (should (functionp 'py-mark-block))
  (should (functionp 'py-mark-minor-block))
  (should (functionp 'py-mark-clause))
  (should (functionp 'py-mark-block-or-clause))
  (should (functionp 'py-mark-def))
  (should (functionp 'py-mark-class))
  (should (functionp 'py-mark-def-or-class))
  (should (functionp 'py-mark-line))
  (should (functionp 'py-mark-statement))
  (should (functionp 'py-mark-comment))
  (should (functionp 'py-mark-top-level))
  (should (functionp 'py-mark-partial-expression))
  (should (functionp 'py-mark-expression))
  (should (functionp 'py-mark-paragraph-bol))
  (should (functionp 'py-mark-block-bol))
  (should (functionp 'py-mark-minor-block-bol))
  (should (functionp 'py-mark-clause-bol))
  (should (functionp 'py-mark-block-or-clause-bol))
  (should (functionp 'py-mark-def-bol))
  (should (functionp 'py-mark-class-bol))
  (should (functionp 'py-mark-def-or-class-bol))
  (should (functionp 'py-mark-line-bol))
  (should (functionp 'py-mark-statement-bol))
  (should (functionp 'py-mark-comment-bol))
  (should (functionp 'py-mark-top-level-bol))
  (should (functionp 'py-mark-partial-expression-bol))
  (should (functionp 'py-mark-expression-bol))
  (should (functionp 'py--beginning-of-block-p))
  (should (functionp 'py--beginning-of-clause-p))
  (should (functionp 'py--beginning-of-block-or-clause-p))
  (should (functionp 'py--beginning-of-def-p))
  (should (functionp 'py--beginning-of-class-p))
  (should (functionp 'py--beginning-of-def-or-class-p))
  (should (functionp 'py--beginning-of-if-block-p))
  (should (functionp 'py--beginning-of-try-block-p))
  (should (functionp 'py--beginning-of-minor-block-p))
  (should (functionp 'py--beginning-of-for-block-p))
  (should (functionp 'py--beginning-of-top-level-p))
  (should (functionp 'py--beginning-of-statement-p))
  (should (functionp 'py--beginning-of-expression-p))
  (should (functionp 'py--beginning-of-partial-expression-p))
  (should (functionp 'py--beginning-of-block-bol-p))
  (should (functionp 'py--beginning-of-clause-bol-p))
  (should (functionp 'py--beginning-of-block-or-clause-bol-p))
  (should (functionp 'py--beginning-of-def-bol-p))
  (should (functionp 'py--beginning-of-class-bol-p))
  (should (functionp 'py--beginning-of-def-or-class-bol-p))
  (should (functionp 'py--beginning-of-if-block-bol-p))
  (should (functionp 'py--beginning-of-try-block-bol-p))
  (should (functionp 'py--beginning-of-minor-block-bol-p))
  (should (functionp 'py--beginning-of-for-block-bol-p))
  (should (functionp 'py--beginning-of-statement-bol-p))
  (should (functionp 'py--shell-completion-get-completions))
  (should (functionp 'py--after-change-function))
  (should (functionp 'py--try-completion-intern))
  (should (functionp 'py--try-completion))
  (should (functionp 'py--shell--do-completion-at-point))
  (should (functionp 'py--complete-base))
  (should (functionp 'py--complete-prepare))
  (should (functionp 'py-shell-complete))
  (should (functionp 'py-indent-or-complete))
  (should (functionp 'py-shift-left))
  (should (functionp 'py-shift-right))
  (should (functionp 'py--shift-intern))
  (should (functionp 'py--shift-forms-base))
  (should (functionp 'py-shift-paragraph-right))
  (should (functionp 'py-shift-paragraph-left))
  (should (functionp 'py-shift-block-right))
  (should (functionp 'py-shift-block-left))
  (should (functionp 'py-shift-minor-block-left))
  (should (functionp 'py-shift-minor-block-right))
  (should (functionp 'py-shift-clause-right))
  (should (functionp 'py-shift-clause-left))
  (should (functionp 'py-shift-block-or-clause-right))
  (should (functionp 'py-shift-block-or-clause-left))
  (should (functionp 'py-shift-def-right))
  (should (functionp 'py-shift-def-left))
  (should (functionp 'py-shift-class-right))
  (should (functionp 'py-shift-class-left))
  (should (functionp 'py-shift-def-or-class-right))
  (should (functionp 'py-shift-def-or-class-left))
  (should (functionp 'py-shift-line-right))
  (should (functionp 'py-shift-line-left))
  (should (functionp 'py-shift-statement-right))
  (should (functionp 'py-shift-statement-left))
  (should (functionp 'py--bounds-of-statement))
  (should (functionp 'py--bounds-of-block))
  (should (functionp 'py--bounds-of-clause))
  (should (functionp 'py--bounds-of-block-or-clause))
  (should (functionp 'py--bounds-of-def))
  (should (functionp 'py--bounds-of-class))
  (should (functionp 'py--bounds-of-def-or-class))
  (should (functionp 'py--bounds-of-buffer))
  (should (functionp 'py--bounds-of-expression))
  (should (functionp 'py--bounds-of-partial-expression))
  (should (functionp 'py--bounds-of-minor-block))
  (should (functionp 'py--bounds-of-if-block))
  (should (functionp 'py--bounds-of-try-block))
  (should (functionp 'py--bounds-of-except-block))
  (should (functionp 'py--bounds-of-top-level))
  (should (functionp 'py--bounds-of-statement-bol))
  (should (functionp 'py--bounds-of-block-bol))
  (should (functionp 'py--bounds-of-clause-bol))
  (should (functionp 'py--bounds-of-block-or-clause-bol))
  (should (functionp 'py--bounds-of-def-bol))
  (should (functionp 'py--bounds-of-class-bol))
  (should (functionp 'py--bounds-of-minor-block-bol))
  (should (functionp 'py--bounds-of-if-block-bol))
  (should (functionp 'py--bounds-of-try-block-bol))
  (should (functionp 'py-beginning-of-top-level))
  (should (functionp 'py-end-of-top-level))
  (should (functionp 'py-beginning))
  (should (functionp 'py-end))
  (should (functionp 'py-up))
  (should (functionp 'py-down))
  (should (functionp 'py-backward-same-level))
  (should (functionp 'py-end-of-block))
  (should (functionp 'py-end-of-clause))
  (should (functionp 'py-end-of-block-or-clause))
  (should (functionp 'py-end-of-def))
  (should (functionp 'py-end-of-class))
  (should (functionp 'py-end-of-def-or-class))
  (should (functionp 'py-end-of-if-block))
  (should (functionp 'py-end-of-elif-block))
  (should (functionp 'py-end-of-try-block))
  (should (functionp 'py-end-of-minor-block))
  (should (functionp 'py-beginning-of-buffer))
  (should (functionp 'py-end-of-buffer)))
